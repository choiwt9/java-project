package com.kh.ch01_variable;

public class VariableRun {

	public static void main(String[] args) {
		/*
		 * 변수를 사용하는 이유 1)값에 의미를 부여하기 위해 사용(가독성이 높아짐) 2)한번 값을 기록하고 필요할 때마다 재 사용 (재사용성 높아짐
		 * ) 3)유지 보수를 보다 쉽게 할 수 있다 ----------------------------- *변수의 선언:값을 기록하기 위한 변수를
		 * 메모리 공간에 할당하는 것 [표현법] 자료형 변수이름; *자료형 : 변수의 크기와 모양을 지정 *변수이름 : 변수의 이름을 붙여주는 부분
		 * -주의 1) 소문자로 시작(카멜케이스 지켜야 한다, 예약어 사용 불가) 2) 같은{} 안에서는 동일한 이름으로 선언 불가-> 중복 안됨
		 * 3){}에 선언된 변수는 그 영역 안에서만 사용 가능-> 다른 영역에서는 사용 불가
		 * 
		 * 
		 */
		// 종류
		// 1. 논리형(논리값 - true/false),1byte 크기, boolean
		boolean isTrue;// 변수선언
		boolean isFalse = false;// 변수 선언과 동시에 값을 대입

		isTrue = 1 + 3 > 0;// 어떤 연산의 결과가 true난 false일때 값 대입

		// 2. 정수형(소숫점X)
		byte bNum; // 1byte 크기. -128~127
		bNum = -128;

		short sNum = 1000; // 2byte
		int iNum = 10000; // 4byte
		long lNum = /* (long) */100000; // 8byte

		// 3. 실수형(소숫점 O)
		float fNum = 0.0f; // 4byte 소숫점 7자리까지 가능
							// 값 뒤에 f 붙여줌
		double dNum = 0.0; // 8byte 소숫점 15자리까지 가능
							// 실수형 기본 자료형

		// 4. 문자형 : 한 글자에 값만 저장할 수 있는 자료형
		// ''로 값을 표현
		char ch = 'a'; // 2byte.
		char hong;
		hong = '홍';
		// => 컴퓨터는 각각의 문자들에 대한 고유한 숫자를 갖고 있다(ascii code/unicode)

		// 5. 문자열 : 한글자도 저장 할 수 있고 여러 글자도 저장 가능
		// ""로 값을 표현
		String str; // 참조 자료형
		str = "안녕?";

		// 저장된 값을 콘솔창에 출력 (변수명 : 저장된 값 형식으로 출력)
		System.out.println("isTrue : " + isTrue);
		System.out.println("bNum : " + bNum);
		System.out.println("iNum" + iNum);
		System.out.println("lNum" + lNum);
		System.out.println("fNum" + fNum);
		System.out.println(dNum);
		System.out.println(ch);
		System.out.println(hong);
		System.out.println(str);

	}

}
