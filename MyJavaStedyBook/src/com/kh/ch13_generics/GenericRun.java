package com.kh.ch13_generics;

public class GenericRun {
	/*
	 * 제네릭 : 클래스 또는 메소드에서 사용되는 다양한 데이터 타입을 일반화 하여 정의하는 것
	 * 
	 * -특징 *코드 재상용성이 증가 *불필요한 형변환 감소 *타입 안정성 제공 -제네릭 클래스
	 * 
	 * [접근제한자][예약어] class 클래스명 <T> {T: 타입 매개변수 //[1] 필드의 데이터 타입 T value; //[2] 메소드의
	 * 매개변수 타입 public void method(T data){} //[3] 메소드의 반환타입 public T method2(){} }
	 * => 제네릭 클래스 객체 생성시 데이터 타입을 결정 - > 명시하지 않으면 object 처리됨 Wrapper클래스를 사용해야 함 -제네릭
	 * 메소드 [접근제한자] [예약어] <T> 반환타입 메소드명([매개변수]){} //타입 매개변수 적용범위 : 매개변수 타입 / 반환타입 /
	 * 메소드 내 지역변수 타입
	 * 
	 * -제네릭 타입 제한 *<T> : 제한 없이 어떤 타입이든 허용 *<T extends 클래스A>: 클래스 A또는 클래스 A를 상속받은
	 * 클래스만 허용 *<T extends 인터페이스 A>: 인터페이스 A를 구현한 클래스만 허용 *<T extends 클래스A & 인터페이스
	 * A> : 클래스 A를 상속받고 인터페이스 A를 구현한 클래스만 허용
	 */

}
